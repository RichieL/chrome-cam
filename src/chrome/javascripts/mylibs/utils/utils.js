// Generated by CoffeeScript 1.3.3
(function() {

  define([], function() {
    var canvas, ctx, pub, toBlob, toDataURL;
    canvas = document.createElement("canvas");
    ctx = canvas.getContext("2d");
    toDataURL = function(image, format) {
      canvas.width = image.width;
      canvas.height = image.height;
      ctx.drawImage(image, 0, 0, image.width, image.height);
      if (format) {
        return canvas.toDataURL(format)(image);
      } else {
        return canvas.toDataURL(image);
      }
    };
    toBlob = function(dataURL) {
      var ab, byteString, i, ia, mimeString, _i, _ref;
      if (dataURL.split(',')[0].indexOf('base64') >= 0) {
        byteString = atob(dataURL.split(',')[1]);
      } else {
        byteString = unescape(dataURL.split(',')[1]);
      }
      mimeString = dataURL.split(',')[0].split(':')[1].split(';')[0];
      ab = new ArrayBuffer(byteString.length, 'binary');
      ia = new Uint8Array(ab);
      for (i = _i = 0, _ref = byteString.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        ia[i] = byteString.charCodeAt(i);
      }
      return new Blob([ia], {
        type: mimeString
      });
    };
    return pub = {
      init: function() {
        Image.prototype.toDataURL = function(format) {
          return toDataURL(this, format);
        };
        return Image.prototype.toBlob = function() {
          var dataURL;
          dataURL = toDataURL(this);
          return toBlob(dataURL);
        };
      },
      toBlob: function(dataURL) {
        return toBlob(dataURL);
      },
      getAnimationFrame: function() {
        return window.requestAnimationFrame || window.webkitRequestAnimationFrame;
      }
    };
  });

}).call(this);
