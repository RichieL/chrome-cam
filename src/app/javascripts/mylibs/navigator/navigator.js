// Generated by CoffeeScript 1.4.0
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  define([], function() {
    "use strict";

    var callbacks, pub;
    callbacks = {
      to: {},
      from: {}
    };
    return pub = {
      navigate: function(view) {
        var callback, deferreds, _i, _j, _len, _len1, _ref, _ref1;
        deferreds = [];
        if (__indexOf.call(callbacks.from, view) >= 0) {
          _ref = callbacks.from[view];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            callback = _ref[_i];
            deferreds.push(callback());
          }
        }
        if (__indexOf.call(callbacks.to, view) >= 0) {
          _ref1 = callbacks.to[view];
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            callback = _ref1[_j];
            deferreds.push(callback());
          }
        }
        return $.when.apply($, deferreds).done(function() {
          return window.APP.app.navigate(view);
        });
      },
      navigating: {
        to: function(view, callback) {
          if (__indexOf.call(callbacks.to, view) < 0) {
            callbacks.to[view] = [];
          }
          return callbacks.to[view].push(callback);
        },
        from: function(view, callback) {
          if (__indexOf.call(callbacks.from, view) < 0) {
            callbacks.from[view] = [];
          }
          return callbacks.from[view].push(callback);
        }
      }
    };
  });

}).call(this);
